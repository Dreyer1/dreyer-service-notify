<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dreyer.core.notify.dao.NotifyRecordMapper">
    <resultMap id="BaseResultMap" type="com.dreyer.facade.notify.entity.NotifyRecord">
        <id column="id_" property="id" jdbcType="BIGINT"/>
        <result column="version_" property="version" jdbcType="SMALLINT"/>
        <result column="create_time_" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="last_notify_time_" property="lastNotifyTime" jdbcType="TIMESTAMP"/>
        <result column="notify_times_" property="notifyTimes" jdbcType="SMALLINT"/>
        <result column="limit_notify_times_" property="limitNotifyTimes" jdbcType="SMALLINT"/>
        <result column="url_" property="url" jdbcType="VARCHAR"/>
        <result column="merchant_order_no_" property="merchantOrderNo" jdbcType="VARCHAR"/>
        <result column="merchant_no_" property="merchantNo" jdbcType="VARCHAR"/>
        <result column="status_" property="status" jdbcType="SMALLINT"/>
        <result column="notify_type_" property="notifyType" jdbcType="SMALLINT"/>
    </resultMap>
    <sql id="Condition_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Condition_Where_Clause">
        <where>
            <foreach collection="condition.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id_, version_, create_time_, last_notify_time_, notify_times_, limit_notify_times_,
    url_, merchant_order_no_, merchant_no_, status_, notify_type_
  </sql>
    <select id="selectByCondition" resultMap="BaseResultMap"
            parameterType="com.dreyer.facade.notify.criteria.NotifyRecordCriteria">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from trade_notify_record
        <if test="_parameter != null">
            <include refid="Condition_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart>0 or limitStart==0">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from trade_notify_record
        where id_ = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trade_notify_record
    where id_ = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByCondition" parameterType="com.dreyer.facade.notify.criteria.NotifyRecordCriteria">
        delete from trade_notify_record
        <if test="_parameter != null">
            <include refid="Condition_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.dreyer.facade.notify.entity.NotifyRecord"
            useGeneratedKeys="true" keyProperty="id">
    insert into trade_notify_record (id_, version_, create_time_,
    last_notify_time_, notify_times_, limit_notify_times_,
    url_, merchant_order_no_, merchant_no_,
    status_, notify_type_)
    values (#{id,jdbcType=BIGINT}, #{version,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP},
    #{lastNotifyTime,jdbcType=TIMESTAMP}, #{notifyTimes,jdbcType=SMALLINT}, #{limitNotifyTimes,jdbcType=SMALLINT},
    #{url,jdbcType=VARCHAR}, #{merchantOrderNo,jdbcType=VARCHAR}, #{merchantNo,jdbcType=VARCHAR},
    #{status,jdbcType=SMALLINT}, #{notifyType,jdbcType=SMALLINT})
  </insert>
    <insert id="insertSelective" parameterType="com.dreyer.facade.notify.entity.NotifyRecord"
            useGeneratedKeys="true" keyProperty="id">
        insert into trade_notify_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id_,
            </if>
            <if test="version != null">
                version_,
            </if>
            <if test="createTime != null">
                create_time_,
            </if>
            <if test="lastNotifyTime != null">
                last_notify_time_,
            </if>
            <if test="notifyTimes != null">
                notify_times_,
            </if>
            <if test="limitNotifyTimes != null">
                limit_notify_times_,
            </if>
            <if test="url != null">
                url_,
            </if>
            <if test="merchantOrderNo != null">
                merchant_order_no_,
            </if>
            <if test="merchantNo != null">
                merchant_no_,
            </if>
            <if test="status != null">
                status_,
            </if>
            <if test="notifyType != null">
                notify_type_,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="version != null">
                #{version,jdbcType=SMALLINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastNotifyTime != null">
                #{lastNotifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="notifyTimes != null">
                #{notifyTimes,jdbcType=SMALLINT},
            </if>
            <if test="limitNotifyTimes != null">
                #{limitNotifyTimes,jdbcType=SMALLINT},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="merchantOrderNo != null">
                #{merchantOrderNo,jdbcType=VARCHAR},
            </if>
            <if test="merchantNo != null">
                #{merchantNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=SMALLINT},
            </if>
            <if test="notifyType != null">
                #{notifyType,jdbcType=SMALLINT},
            </if>
        </trim>
    </insert>
    <select id="countByCondition" parameterType="com.dreyer.facade.notify.criteria.NotifyRecordCriteria"
            resultType="java.lang.Integer">
        select count(*) from trade_notify_record
        <if test="_parameter != null">
            <include refid="Condition_Where_Clause"/>
        </if>
    </select>
    <update id="updateByConditionSelective" parameterType="map">
        update trade_notify_record
        <set>
            <if test="record.id != null">
                id_ = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.version != null">
                version_ = #{record.version,jdbcType=SMALLINT},
            </if>
            <if test="record.createTime != null">
                create_time_ = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastNotifyTime != null">
                last_notify_time_ = #{record.lastNotifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.notifyTimes != null">
                notify_times_ = #{record.notifyTimes,jdbcType=SMALLINT},
            </if>
            <if test="record.limitNotifyTimes != null">
                limit_notify_times_ = #{record.limitNotifyTimes,jdbcType=SMALLINT},
            </if>
            <if test="record.url != null">
                url_ = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantOrderNo != null">
                merchant_order_no_ = #{record.merchantOrderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantNo != null">
                merchant_no_ = #{record.merchantNo,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status_ = #{record.status,jdbcType=SMALLINT},
            </if>
            <if test="record.notifyType != null">
                notify_type_ = #{record.notifyType,jdbcType=SMALLINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Condition_Where_Clause"/>
        </if>
    </update>
    <update id="updateByCondition" parameterType="map">
        update trade_notify_record
        set id_ = #{record.id,jdbcType=BIGINT},
        version_ = #{record.version,jdbcType=SMALLINT},
        create_time_ = #{record.createTime,jdbcType=TIMESTAMP},
        last_notify_time_ = #{record.lastNotifyTime,jdbcType=TIMESTAMP},
        notify_times_ = #{record.notifyTimes,jdbcType=SMALLINT},
        limit_notify_times_ = #{record.limitNotifyTimes,jdbcType=SMALLINT},
        url_ = #{record.url,jdbcType=VARCHAR},
        merchant_order_no_ = #{record.merchantOrderNo,jdbcType=VARCHAR},
        merchant_no_ = #{record.merchantNo,jdbcType=VARCHAR},
        status_ = #{record.status,jdbcType=SMALLINT},
        notify_type_ = #{record.notifyType,jdbcType=SMALLINT}
        <if test="_parameter != null">
            <include refid="Update_By_Condition_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.dreyer.facade.notify.entity.NotifyRecord">
        update trade_notify_record
        <set>
            <if test="version != null">
                version_ = #{version,jdbcType=SMALLINT},
            </if>
            <if test="createTime != null">
                create_time_ = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastNotifyTime != null">
                last_notify_time_ = #{lastNotifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="notifyTimes != null">
                notify_times_ = #{notifyTimes,jdbcType=SMALLINT},
            </if>
            <if test="limitNotifyTimes != null">
                limit_notify_times_ = #{limitNotifyTimes,jdbcType=SMALLINT},
            </if>
            <if test="url != null">
                url_ = #{url,jdbcType=VARCHAR},
            </if>
            <if test="merchantOrderNo != null">
                merchant_order_no_ = #{merchantOrderNo,jdbcType=VARCHAR},
            </if>
            <if test="merchantNo != null">
                merchant_no_ = #{merchantNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status_ = #{status,jdbcType=SMALLINT},
            </if>
            <if test="notifyType != null">
                notify_type_ = #{notifyType,jdbcType=SMALLINT},
            </if>
        </set>
        where id_ = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dreyer.facade.notify.entity.NotifyRecord">
    update trade_notify_record
    set version_ = #{version,jdbcType=SMALLINT},
    create_time_ = #{createTime,jdbcType=TIMESTAMP},
    last_notify_time_ = #{lastNotifyTime,jdbcType=TIMESTAMP},
    notify_times_ = #{notifyTimes,jdbcType=SMALLINT},
    limit_notify_times_ = #{limitNotifyTimes,jdbcType=SMALLINT},
    url_ = #{url,jdbcType=VARCHAR},
    merchant_order_no_ = #{merchantOrderNo,jdbcType=VARCHAR},
    merchant_no_ = #{merchantNo,jdbcType=VARCHAR},
    status_ = #{status,jdbcType=SMALLINT},
    notify_type_ = #{notifyType,jdbcType=SMALLINT}
    where id_ = #{id,jdbcType=BIGINT}
  </update>


    <select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from trade_notify_record
        <where>
            <include refid="condition_sql" />
        </where>
        <![CDATA[ order by ID_ desc]]>
    </select>

    <select id="listPageCount" parameterType="java.util.Map" resultType="long">
        select count(1) from trade_notify_record
        <where>
            <include refid="condition_sql" />
        </where>
    </select>

    <!-- 查询条件 -->
    <sql id="condition_sql">
        <!-- Equal query -->
        <if test="beginDate != null and endDate != null and endDate !='' and beginDate !=''">
            and CREATE_TIME_ between #{beginDate} AND CONCAT(#{endDate},' 23:59:59')
        </if>
        <if test="lastNotifyTime != null and lastNotifyTime != ''"> and LAST_NOTIFY_TIME_ = #{lastNotifyTime,jdbcType=TIMESTAMP}</if>
        <if test="notifyTimes != null and notifyTimes != ''"> and NOTIFY_TIMES_ = #{notifyTimes,jdbcType=SMALLINT}</if>
        <if test="limitNotifyTimes != null and limitNotifyTimes != ''"> and LIMIT_NOTIFY_TIMES_ = #{limitNotifyTimes,jdbcType=SMALLINT}</if>
        <if test="url != null and url != ''"> and URL_ = #{url,jdbcType=VARCHAR}</if>
        <if test="merchantNo != null and merchantNo != ''"> and MERCHANT_NO_ = #{merchantNo}</if>
        <if test="merchantOrderNo != null and merchantOrderNo != ''"> and MERCHANT_ORDER_NO_ = #{merchantOrderNo,jdbcType=VARCHAR}</if>
        <if test="status != null and status !=''"> and STATUS_ = #{status,jdbcType=SMALLINT}</if>
        <if test="notifyType != null and notifyType !=''"> and NOTIFY_TYPE_ = #{notifyType, jdbcType=SMALLINT}</if>
        <!-- 此处foreach中的条件用于分页查询，要用${item},不用#{item} -->
        <if test="statusList != null">
            and STATUS_ in
            <foreach collection="statusList" index="index" item="item" open="(" separator="," close=")">
                ${item}
            </foreach>
        </if>
        <!-- 此处foreach中的条件用于分页查询，要用${item},不用#{item} -->
        <if test="notifyTimeList != null">
            and NOTIFY_TIMES_ in
            <foreach collection="notifyTimeList" index="index" item="item" open="(" separator="," close=")">
                ${item}
            </foreach>
        </if>
    </sql>


</mapper>